" commands {{{

" shellcheck
command! Sh call Check_shellcheck()
" source stuff
command! Svimrc source ${MYVIMRC} | redraw | echom 'vimrc was sourced'
command! Stags helptags ALL

" }}}

" functions {{{

function! Check_shellcheck()
    let l:command = '0read !shellcheck ' . expand('%:p')
    new
    silent execute l:command
endfunction

" Captures the output generated by executing a:msgcmd, then places this
" output in the current buffer.
function! RedirectMessages(message_command, destination_command)
    " Redirect messages to a variable.
    redir => message
    silent execute a:message_command
    redir END
    " execute destination-generating command
    if strlen(a:destination_command)
        silent execute a:destination_command
    endif
    " Place the messages in the destination buffer.
    silent put=message
endfunction

" minibufferxpl has static size, it fixes it
function! Resize_minibufferxpl_window()
    let l:buffer_count = len(split(execute("ls"), "[\n\r]"))
    execute('1res'. l:buffer_count)
endfunction

" layout

function! Toggle_layout()
    if exists('g:_layout_is_open')
        call Close_layout()
        unlet g:_layout_is_open
    else
        call Start_layout()
        let g:_layout_is_open = 1
    endif
endfunction

function! Start_layout()
    NERDTree ${HOME}
    MBEOpenAll!
    MBEToggleMRUAll
    call Resize_minibufferxpl_window()
    TagbarOpen
    vertical resize 25
    wincmd h
    augroup _resize_minibufferxpl
        autocmd!
        autocmd! BufAdd,BufDelete,BufHidden * call Resize_minibufferxpl_window()
    augroup END
endfunction

function! Close_layout()
    NERDTreeClose
    MBEToggleMRUAll
    MBEClose
    TagbarClose
    resize
    augroup _resize_minibufferxpl

        autocmd!

    augroup END
endfunction

" }}}

" autogroups {{{

augroup _formatting
    autocmd!
    autocmd! BufWritePost * Autoformat
    autocmd! BufWritePost ${DOT_FILES}/vim/source/* Svimrc
    autocmd! VimEnter * ALEEnable
augroup END

" }}}
