- ansible.builtin.import_playbook: setup_server.yml

- name: >-
    {{ playbook_name }} | Setup sonarqube
  hosts: "{{ host | default('sonar') }}"
  tags:
    - deploy
    - sonarqube
  vars:
    playbook_name: sonarqube.yml
    max_map_count: 262144
    compose_dir: "{{ server_home }}/sonar"
    generate_certificates: false
  tasks:
    - name: >-
        {{ playbook_name }} | Create docker-compose directories
      ansible.builtin.file:
        path: "{{ compose_dir }}/{{ item.path }}"
        state: directory
        mode: "{{ item.mode }}"
      with_community.general.filetree: templates/sonar/
      loop_control:
        label: "{{ item.path }}"
      when: item.state == "directory"

    - name: >-
        {{ playbook_name }} | Copy docker-compose templates
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ compose_dir }}/{{ item.path }}"
      with_community.general.filetree: templates/sonar/
      loop_control:
        label: "{{ item.path }}"
      when: item.state == "file"

    - name: >-
        {{ playbook_name }} | Set vm.max_map_count kernel setting to
        {{ max_map_count }} for embedded elasticsearch
        https://stackoverflow.com/a/57998152
      become: true
      ansible.builtin.shell: sysctl -w vm.max_map_count={{ max_map_count }}

    - name: >-
        {{ playbook_name }} | Check whether certificates for
        {{ inventory_hostname }} exist
      ansible.builtin.stat:
        path: /etc/letsencrypt/ssl/live/{{ inventory_hostname }}/privkey.pem
      register: private_key_check

    - ansible.builtin.debug:
        msg: >-
          docker-compose run
            --rm
            --entrypoint="/bin/sh"
            certbot
              certbot certonly
                --webroot
                --webroot-path /var/www/certbot/
                --hsts
                --noninteractive
                --agree-tos
                --email "{{ email }}"
                -d "{{ inventory_hostname }}"

    - name: >-
        {{ playbook_name }} | Generate new certificates
      ansible.builtin.shell:
        cmd: >-
          docker-compose run
            --rm
            --entrypoint="/bin/sh"
            certbot
              certbot certonly
                --webroot
                --webroot-path /var/www/certbot/
                --hsts
                --noninteractive
                --agree-tos
                --email "{{ email }}"
                -d "{{ inventory_hostname }}"
        chdir: "{{ compose_dir }}"
      register: output
      when: generate_certificates or not private_key_check.stat.exists

    - name: "{{ playbook_name }} | Show output"
      ansible.builtin.debug: { var: output }

    - name: >-
        {{ playbook_name }} | Run docker-compose up
      community.docker.docker_compose:
        project_src: "{{ server_home }}/sonar"
        remove_orphans: true
        pull: true
      register: output

    - name: "{{ playbook_name }} | Show output"
      ansible.builtin.debug: { var: output }
