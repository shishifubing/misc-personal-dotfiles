# https://pentacent.medium.com/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
version: "3"
services:
    nginx:
        container_name: nginx
        image: nginx
        restart: unless-stopped
        ports:
            - 443:443
            - 80:80
        command: >-
            /bin/sh -c '
                while true;
                    do sleep 6h & wait "$${!}";
                    nginx -s reload;
                done & nginx -g "daemon off;"
            '
        volumes:
            - /etc/letsencrypt:/etc/letsencrypt:ro
            - /var/www/certbot:/var/www/certbot:ro
            - "{{ compose_dir }}/nginx.conf:/etc/nginx/nginx.conf:ro"
            - "{{ compose_dir }}/other:/etc/nginx/other:ro"
        depends_on:
            - certbot

    certbot:
        container_name: certbot
        image: certbot/certbot
        entrypoint: >-
            /bin/sh -c '
                trap exit TERM;
                while true; do
                    certbot renew;
                    sleep 12h & wait "$${!}";
                done;
            '
        volumes:
            - /etc/letsencrypt:/etc/letsencrypt
            - /var/www/certbot:/var/www/certbot

    sonarqube:
        container_name: sonar
        image: sonarqube:community
        restart: unless-stopped
        environment:
            SONARQUBE_JDBC_USERNAME: sonarqube
            SONARQUBE_JDBC_PASSWORD: sonarpass
            SONARQUBE_JDBC_URL: jdbc:postgresql://db:5432/sonarqube
        volumes:
            - /opt/sonarqube:/opt/sonarqube

    db:
        image: postgres
        container_name: sonar-db
        restart: unless-stopped
        environment:
            POSTGRES_USER: sonarqube
            POSTGRES_PASSWORD: sonarpass
            POSTGRES_DB: sonarqube
        volumes:
            - /var/lib/postgresql:/var/lib/postgresql
